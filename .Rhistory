print(head(speed_by_city))
library("nycflights13")
library("dplyr")
View(flights)
average_arrival_delays <- flights %>%
group_by(dest) %>%
summarize(
avg_arr_delay <- mean(arr_delay, na.rm = TRUE)
)
View(average_arrival_delays)
average_arrival_delays <- flights %>%
group_by(dest) %>%
summarize(
avg_arr_delay = mean(arr_delay, na.rm = TRUE)
)
View(average_arrival_delays)
View(airports)
?airports
?flights
View(airlines)
airport_delays <- left_join(average_arrival_delays)
airport_delays <- left_join(average_arrival_delays, by = "name")
airport_delays <- left_join(airports, average_arrival_delays)
airport_delays <- left_join(airports, average_arrival_delays, by = "name")
airport_delays <- left_join(airports, average_arrival_delays,
by = c("dest" = "faa"))
airport_delays <- left_join(average_arrival_delays, airports,
by = c("dest" = "faa"))
View(average_arrival_delays)
View(airport_delays)
airport_delays <- left_join(average_arrival_delays, airports,
by = c("dest" = "faa")) %>%
arrange(-avg_arr_delay)
print(head(airport_delays))
avg_airline_arr_delays <- flights %>%
group_by(carrier) %>%
summarize(avg_arr_delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(avg_arr_delay == min(avg_arr_delay, na.rm = TRUE)) %>%
select(carrier, avg_arr_delay) %>%
left_join(airlines, by = "carrier")
View(avg_airline_arr_delays)
lowest_arr_delay_airline <- flights %>%
group_by(carrier) %>%
summarize(avg_arr_delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(avg_arr_delay == min(avg_arr_delay, na.rm = TRUE)) %>%
select(carrier, avg_arr_delay) %>%
left_join(airlines, by = "carrier")
print(lowest_arr_delay_airline)
install.packages('ggplot2')
library('ggplot2')
library('dplyr')
?diamonds
install.packages("rsconnect")
rsconnect::setAccountInfo(name='joethelazy',
token='13955B5F7DD59951155D1C23035A6F9C',
secret='<SECRET>')
rsconnect::setAccountInfo(name='joethelazy',
token='13955B5F7DD59951155D1C23035A6F9C',
secret='<SECRET>')
rsconnect::setAccountInfo(name='joethelazy',
token='13955B5F7DD59951155D1C23035A6F9C',
secret='JoXjd0pD+gBTc3CRjOjkT3S1MI2QFUx/IqqADh+Q')
rsconnect::setAccountInfo(name='joethelazy',
token='13955B5F7DD59951155D1C23035A6F9C',
secret='JoXjd0pD+gBTc3CRjOjkT3S1MI2QFUx/IqqADh+Q')
shiny::runApp('INFO 201 Files/a8-data-app-JoeTheLazy')
runApp('INFO 201 Files/a8-data-app-JoeTheLazy')
setwd("~/INFO 201 Files/INFO-201-AC6-Final-Project")
shiny::runApp()
runApp()
output$age_map <- renderPlot(
get_age_map(shootings, regs, input$year_input, input$reg_type_input)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?count
runApp()
runApp()
setwd("~/INFO 201 Files/INFO-201-AC6-Final-Project")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?exprToFunction
setwd("~/INFO 201 Files/INFO-201-AC6-Final-Project")
main_ui <- fluidPage(
titlePanel("Comparing Firearm Regulations Data to Mass Shootings Data"),
h3("By: (insert group member names here) "),
hr(),
p("Our app allows users to compare the ", strong("presence or absence of
firearm regulation laws"), " to data concerning ",
strong("mass shootings in the US.")),
tabsetPanel(
type = "tabs",
tabPanel(
title = "Section1",
h3("Are mass shootings getting worse in more recent years?"),
sidebarLayout(
sidebarPanel(
p("That’s a great question to ask! So, we used the mass shooting data
and plot the trend and the change of numbers of victims during the
mass shootings from 1990 to 2017."),
p("From that, we can see the number of the victims are getting higher
in the recent years comparing to 1990s. The number of fatalities
during the mass shooting reached the hightest in 2015, and the
numbers of injured people as well as victims kept going high until
2017.")
),
# Contains data plot output.
mainPanel(
renderPlot(outputId = "sum_plot")
)
)
),
tabPanel(
title = "Section2"
),
tabPanel(
title = "Section3"
),
tabPanel(
title = "Section4"
)
)
)
runApp()
runApp()
runApp()
setwd("~/INFO 201 Files/INFO-201-AC6-Final-Project")
runApp()
setwd("~/INFO 201 Files/INFO-201-AC6-Final-Project")
runApp()
runApp()
l
source("analysis.R")
main_server <- function(input, output) {
output$sum_plot <- renderPlot({
get_summary_plot()
})
}
runApp()
View(get_summary_plot())
View(get_summary_plot())
get_summary_plot <- function() {
shooting <- read.csv(file = "data/Mass Shootings Dataset Ver 5.csv", stringsAsFactors = FALSE) %>%
select(Date, Fatalities, Injured, Total.victims ,Policeman.Killed)
Years <- format(as.Date(shooting$Date, format="%m/%d/%Y"),"%Y")
shooting <- mutate(shooting, Years = Years) %>%
select(Fatalities, Injured, Total.victims ,Policeman.Killed, Years)%>%
group_by(Years) %>%
summarise(Fatalities = sum(Fatalities), Injured = sum(Injured),
Total_victims = sum(Total.victims), Policeman_killed = sum(Policeman.Killed))
shooting_df <- gather(shooting, Victim.type, frequency, Fatalities : Policeman_killed) %>%
filter(Years > 1989)
plot_shooting <- ggplot(data = shooting_df, aes(x = as.numeric(Years), y = as.numeric(frequency), group = Victim.type, colour = Victim.type)) +
geom_line(na.rm = TRUE) +
scale_x_continuous(breaks = c(1990, 1995, 2000, 2005, 2010, 2015, 2017)) +
ggtitle("Victims in Mass Shootings After 1990s") + xlab("Years") + ylab("Number of Victims")
plot_shooting
}
View(get_summary_plot())
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
main_server <- function(input, output) {
regs <- read.csv("data/raw_data.csv", stringsAsFactors = F)
shootings <- read.csv("data/Mass Shootings Dataset Ver 5.csv",
stringsAsFactors = F)
output$sum_plot <- renderPlot({
get_summary_plot()
})
output$reg_map <- renderPlot({
get_reg_map(shootings, regs, input$year_input, input$reg_type_input)
})
}
main_ui <- fluidPage(
titlePanel("Comparing Firearm Regulations Data to Mass Shootings Data"),
h3("By: (insert group member names here) "),
hr(),
p("Our app allows users to compare the ", strong("presence or absence of
firearm regulation laws"), " to data concerning ",
strong("mass shootings in the US.")),
tabsetPanel(
type = "tabs",
tabPanel(
title = "Section1",
h3("Are mass shootings getting worse in more recent years?"),
sidebarLayout(
sidebarPanel(
p("That’s a great question to ask! So, we used the mass shooting data
and plot the trend and the change of numbers of victims during the
mass shootings from 1990 to 2017."),
p("From that, we can see the number of the victims are getting higher
in the recent years comparing to 1990s. The number of fatalities
during the mass shooting reached the hightest in 2015, and the
numbers of injured people as well as victims kept going high until
2017.")
),
# Contains data plot output.
mainPanel(
plotOutput(outputId = "sum_plot")
)
)
),
tabPanel(
title = "Section2",
h3("Do Certain Firearm Regulations Affect # of Mass Shootings?"),
sidebarLayout(
sidebarPanel(
# Allows users to select what firearm regulation to display.
selectInput(
inputId = "reg_type_input",
label = "Select Firearm Provision Regulation:",
choices = c("Illegal to Sell Long Guns to Ages <18" = "age18longgunsale",
"Illegal to Sell Hand Guns to Ages <21" = "age21handgunsale",
"Illegal for Felon to Possess Firearm" = "felony",
"Universal Background Check Required for Gun Purchase" = "universal",
"Stand Your Ground Law Exists" = "nosyg",
"Assault Weapons Banned" = "assault",
"Illegal for People Treated for Alcoholism to Possess Firearms" = "alcoholism")
),
hr(),
# Lets users choose a year.
selectInput(
inputId = "year_input",
label = "Select a Year:",
choices = c(2016, 2015, 2014, 2013, 2012, 2011, 2010, 2009, 2008,
2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000, 1999, 1998,
1997, 1996, 1995, 1994, 1993, 1992, 1991)
)
),
# Contains map plot output.
mainPanel(
plotOutput(outputId = "reg_map")
)
)
),
tabPanel(
title = "Section3"
),
tabPanel(
title = "Section4"
)
)
)
get_reg_map <- function(shootings_frame, reg_frame, input_year, reg_type) {
new_shootings <- add_states_and_years_to_shootings(shootings_frame) %>%
filter(Year == input_year) %>%
drop_na(State) %>%
drop_na(Latitude)
new_regulations <- reg_frame %>%
filter(year == input_year) %>%
mutate(state = tolower(state))
if (reg_type == "age18longgunsale") {
new_regulations <- mutate(
new_regulations,
law_exists = (age18longgunsale == 1)
)
} else if (reg_type == "age21longgunsale") {
new_regulations <- mutate(
new_regulations,
law_exists = (age21longgunsale == 1)
)
} else if (reg_type == "felony") {
new_regulations <- mutate(
new_regulations,
law_exists = (felony == 1)
)
} else if (reg_type == "universal") {
new_regulations <- mutate(
new_regulations,
law_exists = (universal == 1)
)
} else if (reg_type == "nosyg") {
new_regulations <- mutate(
new_regulations,
law_exists = (nosyg == 0)
)
} else if (reg_type == "assault") {
new_regulations <- mutate(
new_regulations,
law_exists = (assault == 1)
)
} else {
new_regulations <- mutate(
new_regulations,
law_exists = (alcoholism == 1)
)
}
state_shape <- map_data("state")
state_regs <- left_join(state_shape, new_regulations,
by = c("region" = "state")) %>%
drop_na(law_exists)
blank_theme <- theme_bw() +
theme(
axis.line = element_blank(),        # remove axis lines
axis.text = element_blank(),        # remove axis labels
axis.ticks = element_blank(),       # remove axis ticks
axis.title = element_blank(),       # remove axis titles
panel.grid.major = element_blank(), # remove major grid lines
panel.grid.minor = element_blank()  # remove minor grid lines
)
ggplot(state_regs) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = law_exists),
color = "white",
size = .1
) + coord_map() + blank_theme + scale_fill_brewer(palette = "Set1") +
geom_point(
data = new_shootings,
mapping = aes(x = Longitude, y = Latitude),
color = "black"
) +
labs(
title =
paste0("Comparing Firearm Provisions Law Presence by State to # of
Mass Shootings in ", input_year)
)
}
runApp()
runApp()
main_server <- function(input, output) {
regs <- read.csv("data/raw_data.csv", stringsAsFactors = F)
shootings <- read.csv("data/Mass Shootings Dataset Ver 5.csv",
stringsAsFactors = F)
output$sum_plot <- renderPlot({
get_summary_plot()
})
output$reg_map <- renderPlot({
get_reg_map(shootings, regs, input$year_input, input$reg_type_input)
})
output$plot <- renderPlot({
shooting_with_y_s <- add_states_and_years_to_shootings(shootings)
shooting_with_spec_state <- filter(shooting_with_y_s,
State == input$state)
shooting_with_spec_state_grouped <- shooting_with_spec_state %>%
group_by(year) %>%
summarize(
number_of_shootings = n()
)
law_year <- law_data[,c('state','year','lawtotal')]
law_year_state <- filter(law_year,state == input$state)
law_year_state_num <- left_join(
law_year_state,
shooting_with_spec_state_grouped,
by = "year")
law_year_state_num
ggplot(data = law_year_state_num) +
geom_point(
mapping = aes(x = year, y = lawtotal,size = as.integer(number_of_shootings)),
color = "RED"
) +
scale_size_continuous(breaks = 1:5)
})
}
runApp()
runApp()
substrfromN <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
library(shiny)
library(dplyr)
library(ggplot2)
library(stringr)
library(tidyr)
library(scales)
library(lubridate)
substrfromN <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
mass_shootings <- read.csv("data/Mass Shootings Dataset Ver 5.csv", stringsAsFactors = FALSE)
mass_shootings <- mutate(mass_shootings, year = as.numeric(substrfromN(mass_shootings$Date, 4)), state = gsub(".*, ","", mass_shootings$Location))
with_mental_restrict <- read.csv("data/raw_data.csv", stringsAsFactors = FALSE) %>%
select(state, year, mentalhealth, invcommitment, invoutpatient, danger) %>%
mutate(men_restrict = mentalhealth + invcommitment + invoutpatient + danger) %>%
filter(men_restrict > 0) %>% inner_join(mass_shootings, by = c("state", "year")) %>%
count(year)
without_mental_restrict <- read.csv("data/raw_data.csv", stringsAsFactors = FALSE) %>%
select(state, year, mentalhealth, invcommitment, invoutpatient, danger) %>%
mutate(men_restrict = mentalhealth + invcommitment + invoutpatient + danger)  %>%
filter(men_restrict == 0) %>% inner_join(mass_shootings, by = c("state", "year")) %>%
count(year)
df <- full_join(without_mental_restrict, with_mental_restrict, by = "year")
colnames(df)[2:3] <- c("with_mental", "without_mental")
shinyServer(function(input, output){
output$graph <- renderPlot({
if(input$variable == "with_mental") {
mental_table <- select(df, year, with_mental)
ggplot(data = df) + geom_bar(mapping =aes(x = year, y = with_mental), stat = "identity") +
labs(x="Years", y="# f Shootings", title="# of Shootings in States With Mental Health Restrictions")
} else {
mental_table <- select(df, year, without_mental)
ggplot(data = df) + geom_bar(mapping =aes(x = year, y = without_mental), stat = "identity") +
labs(x="Years", y="# f Shootings", title="# of Shootings in States Without Mental Health Restrictions")
}
})
output$text1 <- renderText({
if(input$variable == "with_mental"){
paste0("This bar graph shows the number of mass shootings per year in states with mental health restrictions on gun purchases.")
} else {
paste0("This bar graph shows the number of mass shootings per year in states without mental health restrictions on gun purchases.")
}
})
output$text2 <- renderText({
paste0("The impact mental health background checks and restrictions have on decreasing the number of mass shootings based off our data seems to show only a slight decrease in shootings. What may help the restrictions be more effective is pinpointing mental health issues in people amongst the population to stop those that carry out shootings with issues that go unnoticed prior to acts of violence.")
})
})
#ggplot(data = df) + geom_bar(mapping =aes(x = year, y = with_mental), stat = "identity")
#ggplot(data = df) + geom_bar(mapping =aes(x = year, y = without_mental), stat = "identity")
library(shiny)
library(dplyr)
library(ggplot2)
library(stringr)
library(tidyr)
library(scales)
library(lubridate)
substrfromN <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
mass_shootings <- read.csv("data/Mass Shootings Dataset Ver 5.csv", stringsAsFactors = FALSE)
mass_shootings <- mutate(mass_shootings, year = as.numeric(substrfromN(mass_shootings$Date, 4)), state = gsub(".*, ","", mass_shootings$Location))
with_mental_restrict <- read.csv("data/raw_data.csv", stringsAsFactors = FALSE) %>%
select(state, year, mentalhealth, invcommitment, invoutpatient, danger) %>%
mutate(men_restrict = mentalhealth + invcommitment + invoutpatient + danger) %>%
filter(men_restrict > 0) %>% inner_join(mass_shootings, by = c("state", "year")) %>%
count(year)
without_mental_restrict <- read.csv("data/raw_data.csv", stringsAsFactors = FALSE) %>%
select(state, year, mentalhealth, invcommitment, invoutpatient, danger) %>%
mutate(men_restrict = mentalhealth + invcommitment + invoutpatient + danger)  %>%
filter(men_restrict == 0) %>% inner_join(mass_shootings, by = c("state", "year")) %>%
count(year)
df <- full_join(without_mental_restrict, with_mental_restrict, by = "year")
colnames(df)[2:3] <- c("with_mental", "without_mental")
shinyServer(function(input, output){
output$graph <- renderPlot({
if(input$variable == "with_mental") {
mental_table <- select(df, year, with_mental)
ggplot(data = df) + geom_bar(mapping =aes(x = year, y = with_mental), stat = "identity") +
labs(x="Years", y="# f Shootings", title="# of Shootings in States With Mental Health Restrictions")
} else {
mental_table <- select(df, year, without_mental)
ggplot(data = df) + geom_bar(mapping =aes(x = year, y = without_mental), stat = "identity") +
labs(x="Years", y="# f Shootings", title="# of Shootings in States Without Mental Health Restrictions")
}
})
output$text1 <- renderText({
if(input$variable == "with_mental"){
paste0("This bar graph shows the number of mass shootings per year in states with mental health restrictions on gun purchases.")
} else {
paste0("This bar graph shows the number of mass shootings per year in states without mental health restrictions on gun purchases.")
}
})
output$text2 <- renderText({
paste0("The impact mental health background checks and restrictions have on decreasing the number of mass shootings based off our data seems to show only a slight decrease in shootings. What may help the restrictions be more effective is pinpointing mental health issues in people amongst the population to stop those that carry out shootings with issues that go unnoticed prior to acts of violence.")
})
})
#ggplot(data = df) + geom_bar(mapping =aes(x = year, y = with_mental), stat = "identity")
#ggplot(data = df) + geom_bar(mapping =aes(x = year, y = without_mental), stat = "identity")
shinyServer(function(input, output){
output$graph <- renderPlot({
if(input$variable == "with_mental") {
mental_table <- select(df, year, with_mental)
ggplot(data = df) + geom_bar(mapping =aes(x = year, y = with_mental), stat = "identity") +
labs(x="Years", y="# f Shootings", title="# of Shootings in States With Mental Health Restrictions")
} else {
mental_table <- select(df, year, without_mental)
ggplot(data = df) + geom_bar(mapping =aes(x = year, y = without_mental), stat = "identity") +
labs(x="Years", y="# f Shootings", title="# of Shootings in States Without Mental Health Restrictions")
}
})
output$text1 <- renderText({
if(input$variable == "with_mental"){
paste0("This bar graph shows the number of mass shootings per year in states with mental health restrictions on gun purchases.")
} else {
paste0("This bar graph shows the number of mass shootings per year in states without mental health restrictions on gun purchases.")
}
})
output$text2 <- renderText({
paste0("The impact mental health background checks and restrictions have on decreasing the number of mass shootings based off our data seems to show only a slight decrease in shootings. What may help the restrictions be more effective is pinpointing mental health issues in people amongst the population to stop those that carry out shootings with issues that go unnoticed prior to acts of violence.")
})
})
runApp()
install.packages("lubridate")
install.packages("scales")
install.packages("scales")
shiny::runApp()
library("scales")
install.packages("scales")
runApp()
