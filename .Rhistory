)
View(flight_stats)
library("nycflights13")
library("dplyr")
View(flights)
View(flights)
dep_delay_by_month <= flights %>%
group_by(month) %>%
summarize(avg_dep_delay = mean(dep_delay, na.rm = TRUE))
dep_delay_by_month <- flights %>%
group_by(month) %>%
summarize(avg_dep_delay = mean(dep_delay, na.rm = TRUE))
View(dep_delay_by_month)
worst_month <- dep_delay_by_month[dep_delay_by_month$avg_dep_delay ==
max(dep_delay_by_month$avg_dep_delay),
"avg_dep_delay"]
View(worst_month)
worst_month <- filter(dep_delay_by_month, avg_dep_delay == max(avg_dep_delay))
View(worst_month)
plot(dep_delay_by_month)
avg_arr_delay_by_dest <- flights %>%
group_by(dest) %>%
summarize(
dest = dest,
avg_arr_delay = mean(arr_delay, na.rm = TRUE)
) %>%
arrange(-avg_arr_delay)
avg_arr_delay_by_dest <- flights %>%
group_by(dest) %>%
summarize(
avg_arr_delay = mean(arr_delay, na.rm = TRUE)
) %>%
arrange(-avg_arr_delay)
View(dep_delay_by_month)
View(avg_arr_delay_by_dest)
print(head(avg_arr_delay_by_dest))
speed_by_city <- flights %>%
group_by(dest) %>%
summarize(
distance_per_hour = distance / time
)
speed_by_city <- flights %>%
group_by(dest) %>%
mutate(
dist_by_hr <- distance / hour
) %>%
select(c("dest", "dist_by_hr"))
speed_by_city <- flights %>%
mutate(
dist_by_hr <- distance / hour
) %>%
select(c("dest", "dist_by_hr")) %>%
arrange("dest")
speed_by_city <- flights %>%
group_by(dest) %>%
mutate(
dist_by_hr = distance / hour
) %>%
select(c("dest", "dist_by_hr"))
View(speed_by_city)
speed_by_city <- flights %>%
group_by(dest) %>%
mutate(
dist_by_hr = distance / hour
) %>%
select(c("dest", "dist_by_hr")) %>%
arrange(-dist_by_hr)
print(head(speed_by_city))
library("nycflights13")
library("dplyr")
View(flights)
average_arrival_delays <- flights %>%
group_by(dest) %>%
summarize(
avg_arr_delay <- mean(arr_delay, na.rm = TRUE)
)
View(average_arrival_delays)
average_arrival_delays <- flights %>%
group_by(dest) %>%
summarize(
avg_arr_delay = mean(arr_delay, na.rm = TRUE)
)
View(average_arrival_delays)
View(airports)
?airports
?flights
View(airlines)
airport_delays <- left_join(average_arrival_delays)
airport_delays <- left_join(average_arrival_delays, by = "name")
airport_delays <- left_join(airports, average_arrival_delays)
airport_delays <- left_join(airports, average_arrival_delays, by = "name")
airport_delays <- left_join(airports, average_arrival_delays,
by = c("dest" = "faa"))
airport_delays <- left_join(average_arrival_delays, airports,
by = c("dest" = "faa"))
View(average_arrival_delays)
View(airport_delays)
airport_delays <- left_join(average_arrival_delays, airports,
by = c("dest" = "faa")) %>%
arrange(-avg_arr_delay)
print(head(airport_delays))
avg_airline_arr_delays <- flights %>%
group_by(carrier) %>%
summarize(avg_arr_delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(avg_arr_delay == min(avg_arr_delay, na.rm = TRUE)) %>%
select(carrier, avg_arr_delay) %>%
left_join(airlines, by = "carrier")
View(avg_airline_arr_delays)
lowest_arr_delay_airline <- flights %>%
group_by(carrier) %>%
summarize(avg_arr_delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(avg_arr_delay == min(avg_arr_delay, na.rm = TRUE)) %>%
select(carrier, avg_arr_delay) %>%
left_join(airlines, by = "carrier")
print(lowest_arr_delay_airline)
install.packages('ggplot2')
library('ggplot2')
library('dplyr')
?diamonds
install.packages("rsconnect")
rsconnect::setAccountInfo(name='joethelazy',
token='13955B5F7DD59951155D1C23035A6F9C',
secret='<SECRET>')
rsconnect::setAccountInfo(name='joethelazy',
token='13955B5F7DD59951155D1C23035A6F9C',
secret='<SECRET>')
rsconnect::setAccountInfo(name='joethelazy',
token='13955B5F7DD59951155D1C23035A6F9C',
secret='JoXjd0pD+gBTc3CRjOjkT3S1MI2QFUx/IqqADh+Q')
rsconnect::setAccountInfo(name='joethelazy',
token='13955B5F7DD59951155D1C23035A6F9C',
secret='JoXjd0pD+gBTc3CRjOjkT3S1MI2QFUx/IqqADh+Q')
shiny::runApp('INFO 201 Files/a8-data-app-JoeTheLazy')
runApp('INFO 201 Files/a8-data-app-JoeTheLazy')
shiny::runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
main_ui <- fluidPage(
titlePanel("Comparing Firearm Regulations Data to Mass Shootings Data"),
h3("By: Xuejiao Li, Nikolai Frank Nilsen, Zixin Wang, Justin C Woo"),
hr(),
p("Our app allows users to compare the ", strong("presence or absence of
firearm regulation laws"), " to data concerning ",
strong("mass shootings in the US.")),
# Contains each section related to our critical questions.
tabsetPanel(
type = "tabs",
# Jimmy's Section.
tabPanel(
title = "Victims",
h3("Are mass shootings getting worse in more recent years?"),
sidebarLayout(
sidebarPanel(
p("That’s a great question to ask! So, we used the mass shooting data
and plot the trend and the change of numbers of victims during the
mass shootings from 1990 to 2017."),
p("From that, we can see the number of the victims are getting higher
in the recent years comparing to 1990s. The number of fatalities
during the mass shooting reached the hightest in 2015, and the
numbers of injured people as well as victims kept going high until
2017.")
),
# Contains data plot output.
mainPanel(
plotOutput(outputId = "sum_plot")
)
)
),
# Frank's section.
tabPanel(
title = "Firearm Regulations",
h3("Do Certain Firearm Regulations Affect # of Mass Shootings?"),
sidebarLayout(
sidebarPanel(
# Allows users to select what firearm regulation to display.
selectInput(
inputId = "reg_type_input",
label = "Select Firearm Provision Regulation:",
choices = c("Illegal to Sell Long Guns to Ages <18" = "age18longgunsale",
"Illegal to Sell Hand Guns to Ages <21" = "age21handgunsale",
"Illegal for Felon to Possess Firearm" = "felony",
"Universal Background Check Required for Gun Purchase" = "universal",
"Stand Your Ground Law Exists" = "nosyg",
"Assault Weapons Banned" = "assault",
"Illegal for People Treated for Alcoholism to Possess Firearms" = "alcoholism")
),
hr(),
# Lets users choose a year.
selectInput(
inputId = "year_input",
label = "Select a Year:",
choices = c(2016, 2015, 2014, 2013, 2012, 2011, 2010, 2009, 2008,
2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000, 1999, 1998,
1997, 1996, 1995, 1994, 1993, 1992, 1991)
)
),
# Contains map plot output.
mainPanel(
plotOutput(outputId = "reg_map")
)
)
),
# Ayla's section.
tabPanel(
title = "Totals",
h3("Number of mass shootings corresponding
to the number of gun regulations"),
sidebarLayout( #set a side bar layout
sidebarPanel(
# lables and contents for the side bar widget one
em("Select the state that you are interested in"),
selectInput(
inputId = "state",
label = "Pick a state",
choices = regs[1:50,'state']
)
),
# specify content for the "main" Panel
mainPanel(
plotOutput("plot")
)
)
),
# Justin's section.
tabPanel(
title = "Mental Health",
sidebarLayout(
sidebarPanel(
radioButtons("variable", "Display data of shootings in states:",
c("With Mental Health Restrictions" = "with_mental", "Without Mental Health Restrictions" = "without_mental"))),
mainPanel(
tabsetPanel(type = "tabs",
tabPanel(("Graph"), plotOutput("graph"), p(textOutput("text1")), p(textOutput("text2")))
)
)
)
)
)
)
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
main_ui <- fluidPage(
titlePanel("Comparing Firearm Regulations Data to Mass Shootings Data"),
h3("By: Xuejiao Li, Nikolai Frank Nilsen, Zixin Wang, Justin C Woo"),
hr(),
p("Our app allows users to compare the ", strong("presence or absence of
firearm regulation laws"), " to data concerning ",
strong("mass shootings in the US.")),
# Contains each section related to our critical questions.
tabsetPanel(
type = "tabs",
# Jimmy's Section.
tabPanel(
title = "Victims",
h3("Are mass shootings getting worse in more recent years?"),
sidebarLayout(
sidebarPanel(
p("That’s a great question to ask! So, we used the mass shooting data
and plot the trend and the change of numbers of victims during the
mass shootings from 1990 to 2017."),
p("From that, we can see the number of the victims are getting higher
in the recent years comparing to 1990s. The number of fatalities
during the mass shooting reached the hightest in 2015, and the
numbers of injured people as well as victims kept going high until
2017.")
),
# Contains data plot output.
mainPanel(
plotOutput(outputId = "sum_plot")
)
)
),
# Frank's section.
tabPanel(
title = "Firearm Regulations",
h3("Do Certain Firearm Regulations Affect # of Mass Shootings?"),
sidebarLayout(
sidebarPanel(
# Allows users to select what firearm regulation to display.
selectInput(
inputId = "reg_type_input",
label = "Select Firearm Provision Regulation:",
choices = c("Illegal to Sell Long Guns to Ages <18" =
"age18longgunsale",
"Illegal to Sell Hand Guns to Ages <21" =
"age21handgunsale",
"Illegal for Felon to Possess Firearm" = "felony",
"Universal Background Check Required for Gun Purchase" =
"universal",
"Stand Your Ground Law Exists" = "nosyg",
"Assault Weapons Banned" = "assault",
"Illegal for People Treated for Alcoholism to Possess
Firearms" = "alcoholism")
),
hr(),
# Lets users choose a year.
selectInput(
inputId = "year_input",
label = "Select a Year:",
choices = c(2016, 2015, 2014, 2013, 2012, 2011, 2010, 2009, 2008,
2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000, 1999,
1998, 1997, 1996, 1995, 1994, 1993, 1992, 1991)
),
hr(),
p(strong("Blue"), " indicates a state with the selected firearm
provisions law, while ", strong("Red"), " indicates a state
without. Each ", strong("black dot"), " represents the location
of a mass shooting. All data is shown for the ",
strong("selected year"))
),
# Contains map plot output.
mainPanel(
plotOutput(outputId = "reg_map")
)
),
p("Overall, there ", strong("does not seem to be any strong correlation"),
" between any specific firearm provisions law to the number of mass
shootings. However, ", strong("certain states"), " seem to have more
mass shootings between years compared to others, which lack many
of the selectable firearm provision laws."),
p("Of note is that the presence of a ", strong("\"Stand Your Ground\""),
" law does not seem to be a deterrent for mass shootings")
),
# Ayla's section.
tabPanel(
title = "Totals",
h3("Number of mass shootings corresponding
to the number of gun regulations"),
sidebarLayout( #set a side bar layout
sidebarPanel(
# lables and contents for the side bar widget one
em("Select the state that you are interested in"),
selectInput(
inputId = "state",
label = "Pick a state",
choices = regs[1:50,'state']
)
),
# specify content for the "main" Panel
mainPanel(
plotOutput("plot")
)
)
),
# Justin's section.
tabPanel(
title = "Mental Health",
sidebarLayout(
sidebarPanel(
radioButtons("variable", "Display data of shootings in states:",
c("With Mental Health Restrictions" = "with_mental", "Without Mental Health Restrictions" = "without_mental"))),
mainPanel(
tabsetPanel(type = "tabs",
tabPanel(("Graph"), plotOutput("graph"), p(textOutput("text1")), p(textOutput("text2")))
)
)
)
)
)
)
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
runApp('INFO 201 Files/INFO-201-AC6-Final-Project')
showLog()
library("rsconnect")
showLog()
?showLogs
showLogs()
setwd("~/INFO 201 Files/INFO-201-AC6-Final-Project")
showLogs(appPath = getwd())
install.packages("maps")
install.packages("maps")
shiny::runApp()
install.packages("ggmap")
install.packages("ggplot2")
install.packages("ggplot2")
shiny::runApp()
library("maps")
runApp()
install.packages("mapproj")
install.packages("mapproj")
shiny::runApp()
runApp()
runApp()
main_ui <- fluidPage(
titlePanel("Comparing Firearm Regulations Data to Mass Shootings Data"),
h3("By: Xuejiao Li, Nikolai Frank Nilsen, Zixin Wang, Justin C Woo"),
hr(),
p("Our app allows users to compare the ", strong("presence or absence of
firearm regulation laws"), " to data concerning ",
strong("mass shootings in the US.")),
# Contains each section related to our critical questions.
tabsetPanel(
type = "tabs",
# Jimmy's Section.
tabPanel(
title = "Victims",
h3("Are mass shootings getting worse in more recent years?"),
sidebarLayout(
sidebarPanel(
p("That's a great question to ask! So, we used the mass shooting data
and plot the trend and the change of numbers of victims during the
mass shootings from ", strong("1990"), " to ", strong("2017.")),
p("From that, we can see the ", strong("number of the victims are getting higher"),
" in the recent years comparing to 1990s. The number of fatalities
during the mass shooting ", strong("reached the hightest in 2015"),
", and the numbers of injured people as well as victims ",
strong("kept increasing up to 2017."))
),
# Contains data plot output.
mainPanel(
plotOutput(outputId = "sum_plot")
)
)
),
# Frank's section.
tabPanel(
title = "Firearm Regulations",
h3("Do Certain Firearm Regulations Affect # of Mass Shootings?"),
sidebarLayout(
sidebarPanel(
# Allows users to select what firearm regulation to display.
selectInput(
inputId = "reg_type_input",
label = "Select Firearm Provision Regulation:",
choices = c("Illegal to Sell Long Guns to Ages <18" =
"age18longgunsale",
"Illegal to Sell Hand Guns to Ages <21" =
"age21handgunsale",
"Illegal for Felon to Possess Firearm" = "felony",
"Universal Background Check Required for Gun Purchase" =
"universal",
"Stand Your Ground Law Exists" = "nosyg",
"Assault Weapons Banned" = "assault",
"Illegal for People Treated for Alcoholism to Possess
Firearms" = "alcoholism")
),
hr(),
# Lets users choose a year.
selectInput(
inputId = "year_input",
label = "Select a Year:",
choices = c(2016, 2015, 2014, 2013, 2012, 2011, 2010, 2009, 2008,
2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000, 1999,
1998, 1997, 1996, 1995, 1994, 1993, 1992, 1991)
),
hr(),
p(strong("Blue"), " indicates a state with the selected firearm
provisions law, while ", strong("Red"), " indicates a state
without. Each ", strong("black dot"), " represents the location
of a mass shooting. All data is shown for the ",
strong("selected year"))
),
# Contains map plot output.
mainPanel(
plotOutput(outputId = "reg_map")
)
),
p("Overall, there ", strong("does not seem to be any strong correlation"),
" between any specific firearm provisions law to the number of mass
shootings. However, ", strong("many south-eastern states"), " seem to
have more mass shootings in 2015 and 2016 compared to others, which
lack many of the selectable firearm provision laws."),
p("Of note is that the presence of a ", strong("\"Stand Your Ground\""),
" law does not seem to be a deterrent for mass shootings")
),
# Ayla's section.
tabPanel(
title = "Totals",
h3("Is there a correlation between the number of mass shootings
and the number of firearm provision regulations?"),
sidebarLayout( #set a side bar layout
sidebarPanel(
# lables and contents for the side bar widget one
selectInput(
inputId = "state",
label = "Pick a state that you are interested in",
choices = regs[1:50,'state']
)
),
# specify content for the "main" Panel
mainPanel(
plotOutput("plot"),
p(textOutput("text3"))
)
)
),
# Justin's section.
tabPanel(
title = "Mental Health",
h3("What Is the Impact Mental Health Restrictions Have on the Number of Mass Shootings?"),
sidebarLayout(
sidebarPanel(
radioButtons("variable", "Display data of shootings in states:",
c("With Mental Health Restrictions" = "with_mental", "Without Mental Health Restrictions" = "without_mental"))),
mainPanel(
plotOutput("graph"), p(textOutput("text1")), p(textOutput("text2")))
)
)
)
)
runApp()
